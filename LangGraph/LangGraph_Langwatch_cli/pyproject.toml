[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "langgraph-langwatch-cli"
version = "0.1.0"
description = "LangGraph application with LangWatch monitoring investigation"
authors = [
    {name = "Aleksei Kolesnikov", email = "kolesnikov.aliaksei@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    "langgraph>=0.2.0",
    "langchain-core>=0.3.0",
    "langchain-openai>=0.2.0",
    "langwatch>=0.1.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.8.0",
    "pydantic-settings>=2.10.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/glareone"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "W",      # pycodestyle warnings
    "UP",     # pyupgrade
    "D",      # pydocstyle (docstring conventions)
    "B",      # flake8-bugbear
    "D401",   # First line should be in imperative mood
    "D403",   # First word of docstring should be properly capitalized
    "D406",   # Docstring should end with a period
    "C4",     # flake8-comprehensions
    "PTH",    # flake8-use-pathlib
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "ARG",    # flake8-unused-arguments
    "ERA",    # eradicate (commented code)
    "PLR",    # pylint refactor
    "PLW",    # pylint warnings
    "RUF",    # ruff-specific rules
]
ignore = [
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
]

[tool.ruff.lint.pydocstyle]
convention = "google"  # Use Google docstring style

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-single-line = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[dependency-groups]
dev = [
    "ruff>=0.13.0",
]
